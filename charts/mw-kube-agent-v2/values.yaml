# Default values for mw-kube-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

mw:
  target: XXXXXXXXX
  apiKey: XXXXXXXXX
  configCheckInterval: "*/1 * * * *"
  apiUrlForConfigCheck: https://app.middleware.io
  dockerEndpoint: "unix:///var/run/docker.sock"
  selfProfiling: false
  profilingServerUrl: "https://profiling.middleware.io"
  agentInternalMetricsPort: 8888
  agentFeatures:
    infraMonitoring: true
  apiKeyFromExistingSecret:
    enabled: false
    name: existing-secret
    key: existing-secret-key

clusterMetadata:
  name: "unknown"

replicaCount: 1

image:
  repository: ghcr.io/middleware-labs/mw-kube-agent
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: 1.12.0

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

rbac:
  create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: mw-service-account

namespace:
  name: mw-agent-ns

secret:
  type: Opaque
  certSecretName: mw-app-certs
  csrfSecretName: mw-app-csrf
  keyHolderSecretName: mw-app-key-holder

role:
  name: mw-role

roleBinding:
  name: mw-role-binding

clusterRole:
  name: mw-cluster-role

clusterRoleBinding:
  name: mw-cluster-role-binding

service:
  name: mw-service
  type: NodePort
  grpc:
    port: 9319
    targetPort: 9319
  http:
    port: 9320
    targetPort: 9320
  fluent:
    port: 8006
    targetPort: 8006

daemonset:
  name: mw-kube-agent
  configMap:
    name: mw-daemonset-otel-config
deployment:
  name: mw-kube-agent
  configMap:
    name: mw-deployment-otel-config

resources:
  requests:
    cpu: "200m" # Default CPU request
    memory: "256Mi" # Default memory request
  limits:
    cpu: "500m" # Default CPU limit
    memory: "512Mi" # Default memory limit

priorityClass:
  # Specifies whether a priorityClass should be created
  create: false
  # The name of the priorityClass to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Sets the priority value of the priority class
  priorityValue: 1000000000

selectorLabels:
  k8s-app: mw-app

targetAllocatorConfigs:
  serviceMonitor:
    matchLabels: {}

features:
  # For Kubelet based metrics i.e. k8s.pod.cpu.time, k8s.pod.cpu.utilization, etc.
  enableKubeletMetricsCollection: true
  # For monitoring Kubernetes nodes as host machines and reading logs from /var/log
  enableHostMonitoring: true
  # For monitoring Kubernetes containers as docker containers
  enableContainerMonitoring: false
  # For getting and applying runtime settings from Middleware
  enableRuntimePipelines: true
  # Target Allocator based Prometheus Monitoring
  enablePrometheusTargetAllocator: false
